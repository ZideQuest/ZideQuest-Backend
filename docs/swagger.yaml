openapi: 3.0.0
info:
    title: ZideQuest
    version: 1.0.0
servers:
    - url: https://feline-precious-wildcat.ngrok-free.app/api
    - url: http://localhost:3000/api
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
tags:
    - name: user
    - name: quest
    - name: auth
    - name: location
    - name: admin
    - name: creator
    - name: tag
    - name: search
paths:
    /v1/auth/login:
        post:
            tags:
                - auth
            summary: login
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: zidequest
                                password: "123"
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users:
        post:
            tags:
                - user
            summary: create user
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: kit
                                password: "123123"
                                firstName: Suphakit
                                lastName: Songsuwong
                                nisitId: "6510503808"
                                email: suphakit.song@ku.th
                                faculty: E
                                activityTranscript:
                                    category:
                                        university:
                                            count: 2
                                            hour: 4
                                        empowerment:
                                            category:
                                                morality:
                                                    count: 1
                                                    hour: 2
                                                relation:
                                                    count: 2
                                                    hour: 4
                                        society:
                                            count: 1
                                            hour: 2
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users:
        get:
            tags:
                - user
            summary: get users
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users/quests:
        get:
            tags:
                - user
            summary: get users quest
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users/activity:
        get:
            tags:
                - user
            summary: get users activity
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users/info:
        get:
            tags:
                - user
            summary: get users info
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}                        
    /v1/users/{id}:
        put:
            tags:
                - user
            summary: update user
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example: ""
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    type: string
            tags:
                - user
            summary: delete user
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/users/notification/{notiId}:
        delete:
            parameters:
            -   in: path
                name: notiId
                required: true
                schema:
                    type: string
            tags:
                - user
            summary: delete user's notification
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/locations/{id}:
        post:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: create quest
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                img:
                                    type: string
                                    format: binary
                                questName:
                                    type: string
                                    example: กระโดต่อย
                                timeStart:
                                    type: string
                                    example: "2023-07-24T00:19:54.519Z"
                                timeEnd:
                                    type: string
                                    example: "2023-07-24T03:22:54.519Z"
                                description:
                                    type: string
                                    example: อร่อยจัง
                                activityHour[category]:
                                    type: integer
                                    example: "3"
                                maxParticipant:
                                    type: integer
                                    example: "30"
                                autoComplete:
                                    type: boolean
                                    example: "true"
                                activityHour[hour]:
                                    type: integer
                                    example: "3"
                                tagId[]:
                                    type: string
                                    example: 64eb6555ef69bb10f6f24395
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/join-leave:
        patch:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: join+leave Quest
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{questId}/remove-user:
        patch:
            parameters:
                - in: path
                  name: questId
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: creator remove user from quest
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                              users: ["64eb6555ef69bb10f6f24395", "64eb6555ef69bb10f6f24395"]
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{questId}/check-user:
        patch:
            parameters:
                - in: path
                  name: questId
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: creator check user from quest
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                              users: ["64eb6555ef69bb10f6f24395", "64eb6555ef69bb10f6f24395"]
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/complete:
            patch:
                parameters:
                    - in: path
                      name: id
                      required: true
                      schema:
                          type: string
                tags:
                    - quest
                summary: quest complete
                security:
                    - bearerAuth: []
                responses:
                    "200":
                        description: Successful response
                        content:
                            application/json: {}
    /v1/quests/{id}/attend:
        patch:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: user attend quest from qr
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/cancel:
        patch:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: creator cancel quest
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                message:
                                    type: string
                                    example: "got canceled"
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests:
        get:
            tags:
                - quest
            summary: get quest
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/participants:
        get:
            parameters:
                -   in: path
                    name: id
                    required: true
                    schema:
                      type: string
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: get quest participants
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/find:
        get:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: get quest by quest ID
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/recommend:
        get:
            tags:
                - quest
            summary: recomendQuest
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/creator-all:
        get:
            tags:
                - quest
            summary: get all creator Quest
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/creator-uncomplete:
        get:
            tags:
                - quest
            summary: get all creator uncomplete Quest
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}/qr:
        get:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: get quest qr
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/quests/{id}:
        put:
            tags:
                - quest
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            summary: update quest
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example: ""
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - quest
            summary: delete quest
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/locations:
        post:
            tags:
                - location
            summary: createLocation
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                locationName:
                                    type: string
                                    example: LH3
                                latitude:
                                    type: number
                                    example: "5.129443"
                                longitude:
                                    type: number
                                    example: "2.124124"
                                img:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - location
            summary: getAllLocation
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/locations/{id}:
        get:
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    type: string
            security:
                - bearerAuth: []
            tags:
                - location
            summary: getLocationById
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        put:
            parameters:
            -   in: path
                name: id
                required: true
                schema:
                    type: string
            tags:
                - location
            summary: updateLocationById
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                _id: 64bdefb5ce0d5789a968ebf1
                                locationName: KUSDERFTGYHUJIKOL
                                latitude: 1.134253
                                longitude: 8.63495
                                createdAt: "2023-07-24T03:27:49.815Z"
                                updatedAt: "2023-07-24T03:27:49.815Z"
                                __v: 0
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            tags:
                - location
            summary: deleteLocationById
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/admins:
        post:
            tags:
                - admin
            summary: createAdmin
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: zidequest
                                password: "123"
                                organizeName: zide
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - admin
            summary: getAdmin
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/admins/{id}:
        get:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - admin
            summary: getAdminID
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        put:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - admin
            summary: updateAdminID
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                organizeName: yeet
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - admin
            summary: deleteAdminID
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/creators:
        post:
            tags:
                - creator
            summary: create Creator
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                username: bas
                                password: "123123"
                                organizeName: basketballku
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - creator
            summary: get Creator
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/creators/{id}:
        get:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - creator
            summary: get Creator by id
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        put:
            tags:
                - creator
            summary: update Creator
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                organizeName: yeet
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            tags:
                - creator
            summary: delete Creator
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/tags:
        post:
            tags:
                - tag
            summary: create tag
            requestBody:
                content:
                    "*/*":
                        schema:
                            type: string
                            example: '"{\r\n    \"tagName\": \"testnisit\"\r\n}"'
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        get:
            tags:
                - tag
            summary: get tag
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/tags/{id}:
        put:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - tag
            summary: update tag
            requestBody:
                content:
                    "*/*":
                        schema:
                            type: string
                            example: '"{\r\n    \"tagName\": \"betternisit\"\r\n}"'
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
        delete:
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            tags:
                - tag
            summary: delete tag
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
    /v1/search:
        get:
            parameters:
                - in: query
                  name: Name
                - in: query
                  name: timeStart
                - in: query
                  name: timeEnd
                - in: query
                  name: tagId
                  schema:
                    type: array
                  collectionFormat: multi
            tags:
                - search
            summanry: search/filter quest
            responses:
                "200":
                    description: Successful response
                    content:
                        application/json: {}
                
